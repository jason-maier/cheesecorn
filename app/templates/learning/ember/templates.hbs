<div class="mb-12 ml-6 md:ml-56 lg:ml-64 w-4/5 md:w-3/5 lg:w-3/5">
  <SectionTitle @title="Using Template in Ember" />
  <div class="row">
    <span class="col s8 offset-s2">
      <p class="mb-2">
        If you're beginning your dive into Ember concepts templates are a great place to start.
        They're the building block of your Ember application and interact with and are modified by most other Ember concepts.
        There's a reason the official Ember documentation begins by defining and demystiying templates.
      </p>
      <Section @title="Explain templates like I'm five">
        Templates are a bunch of HTML and dynamic elements that get compiled by your Ember application and rendered in the DOM.
        Ember uses the Handlebars templating library. Here is an example basic template:
      </Section>
      <pre><code class="language-markup">
  &lt;div class=&quot;row&quot;&gt;
    &lt;h3&gt;
      &lt;a href=&quot;/learning/ember/\{{concept.name}}&quot;&gt;
        &lt;span class=&quot;articletitle navitemtext&quot;&gt;
          \{{concept.name}}
        &lt;/span&gt;
      &lt;/a&gt;
    &lt;/h3&gt;
    &lt;p&gt;
      \{{concept.description}}
    &lt;/p&gt;
  &lt;/div&gt;
      </code></pre>
      <Section @title="Quick tips">
        <ul class="collection">
          <li class="collection-item">
            The Handlebars library will fail silently if your template looks for a property that does not exist.
            This is great for building flexible templates that can accomodate objects with small differences in properties.
          </li>
          <li class="collection-item">
            You can use self-closing syntax for things elements such as divs that aren't typical self-closing HTML tags.
          </li>
          <li class="collection-item">
            You cannot use `script` tags in your template.
          </li>
        </ul>
      </Section>
    </span>
  </div>
</div>